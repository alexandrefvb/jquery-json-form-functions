{"name":"jquery-json-form-functions","tagline":"An extension of jQuery with functions that simplifies JSON ajax requests using html forms.","body":"jquery-json-form-functions\r\n==========================\r\n\r\nAn extension of jQuery with functions that simplifies JSON ajax requests using html forms.\r\n\r\nThis script adds three utility functions to jQuery to convert form data to json objects and do ajax requests to POST or PUT the converted form data to http services.\r\n\r\nThis project was created to simplify the integration of our jQuery enabled websites to REST webservices developed with Spring MVC, but can be used with .  \r\n\r\n### Dependencies\r\n\r\n- [jQuery](http://jquery.com/) (tested with jquery-1.11.1.min.js)\r\n- [json2](https://github.com/douglascrockford/JSON-js) polyfill for use in IE < 8.\r\n  \r\n### Usage:\r\n\r\n#####Import script on html (after jquery script):\r\n\t<script src=\"https://code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n\t<script src=\"jquery-json-form-functions-0.1.1.min.js\"></script>\r\n\r\n#####Use jQuery selector to select form and call library methods:\r\n  \t// returns form data converted to json based on input names.\r\n\t$(form-selector).toJson(); \r\n\r\n\t// converts form data to JSON based on input names and do a POST  \r\n\t// ajax request to the url configured in action form attribute. \r\n\t// The return will be the jQuery ajax promise.\r\n\t$(form-selector).postJson().done(doneHandler).fail(failHandler);\r\n \r\n\r\n\t// converts form data to JSON based on input names and do a PUT  \r\n\t// ajax request to the url configured in action form attribute. \r\n\t// The return will be the jQuery ajax promise.\r\n\t$(form-selector).putJson().done(doneHandler).fail(failHandler);\r\n  \r\n### Conversion rules:\r\n\r\n  - All inputs on form that have a name attribute will be added to the JSON.\r\n  - The name attribute defines which property of JSON will be populated.\r\n  - Nested objects with multiple levels of attributes can be created using dots \".\" to specify nested properties.\r\n  - Arrays of values can be created using the same name in more than one input on same form.\r\n  - To create arrays of objects indexes must be used to determine which object of list will hold input value.\r\n  - Inputs with empty values are ommitted on JSON.\r\n  - For checkboxes and radio buttons just \"checked\" values are added to JSON.\r\n  - Any input with class \"json-form-array\" will be converted to an array in JSON. This feature can be used in selects with multiple selection and checkboxes to force array representation even if just one option was selected.\r\n    \r\n\r\n### Full example:\r\n\r\n#####HTML form:\r\n\r\n\t<form id=\"aForm\" action=\"http://some-service-url\">   \r\n    \t<input type=\"hidden\" name=\"simpleAttribute\" value=\"123\"/>\r\n\r\n    \t<input type=\"text\" name=\"listAttribute\" value=\"a\"/>\r\n    \t<input type=\"text\" name=\"listAttribute\" value=\"b\"/>\r\n      \r\n    \t<input type=\"text\" name=\"object.simpleAtrtribute\" value=\"456\"/>\r\n    \t<input type=\"text\" name=\"object.listAttribute\" value=\"c\"/>\r\n    \t<input type=\"text\" name=\"object.listAttribute\" value=\"d\"/>\r\n    \t<input type=\"text\" name=\"object.nestedObject.simpleAtrtribute\" value=\"789\"/>  \r\n    \t<input type=\"text\" name=\"object.nestedObject.listAttribute\" value=\"e\"/>\r\n    \t<input type=\"text\" name=\"object.nestedObject.listAttribute\" value=\"f\"/>\r\n\t      \r\n    \t<input type=\"text\" name=\"objectList[0].simpleAtrtribute\" value=\"101112\"/>\r\n\t    <input type=\"text\" name=\"objectList[0].listAttribute\" value=\"g\"/>\r\n\t    <input type=\"text\" name=\"objectList[0].listAttribute\" value=\"h\"/>\r\n    \t<input type=\"text\" name=\"objectList[1].simpleAtrtribute\" value=\"131515\"/>\r\n\t    <input type=\"text\" name=\"objectList[1].listAttribute\" value=\"i\"/>\r\n    \t<input type=\"text\" name=\"objectList[1].listAttribute\" value=\"j\"/>\r\n\r\n        <input type=\"hidden\" name=\"ignoredAttribute\" value=\"\"/>\r\n\r\n        <input type=\"hidden\" name=\"forcedArrayAttribute\" value=\"x\" class=\"json-form-array\"/>\r\n\r\n        <input type=\"checkbox\" name=\"checkboxField\" value=\"Value 1\" class=\"json-form-array\" checked=\"checked\"/> \r\n        <input type=\"checkbox\" name=\"checkboxField\" value=\"Value 2\" /> \r\n        <input type=\"checkbox\" name=\"checkboxField\" value=\"Value 3\" />\r\n        \r\n        <input type=\"radio\" name=\"radioField\" value=\"Value 1\" checked=\"checked\"/>\r\n        <input type=\"radio\" name=\"radioField\" value=\"Value 2\"/>\r\n        <input type=\"radio\" name=\"radioField\" value=\"Value 3\"/> \r\n        \r\n        <select name=\"selectField\">\r\n            <option value=\"A\">A</option>\r\n            <option value=\"B\">B</option>\r\n            <option value=\"C\" selected=\"selected\">C</option>\r\n        </select>\r\n        \r\n        <select name=\"multipleSelectField\" multiple=\"multiple\" class=\"json-form-array\">\r\n            <option value=\"A\" selected=\"selected\">A</option>\r\n            <option value=\"B\">B</option>\r\n            <option value=\"C\">C</option>\r\n        </select>        \r\n    </form>\r\n\r\n#####Converting to JSON:\r\n    \r\n  \t$('#aform').toJson(); \r\n  \r\nThe result will be:\r\n\r\n  \t{ \r\n  \t\t\"simpleAttribute\": \"123\",\r\n  \t\t\"listAttribute\": [\"a\", \"b\"],\r\n  \t\t\"object\": {\r\n  \t\t\t\"simpleAttribute\": \"456\",\r\n  \t\t\t\"listAttribute\": [\"c\", \"d\"],\r\n \t\t\t\"nestedObject\": {\r\n  \t\t\t\t\"simpleAttribute\": \"789\",\r\n  \t\t\t\t\"listAttribute\": [\"e\", \"f\"]\r\n  \t\t\t} \r\n  \t\t}\r\n  \t\t\"objectList\": [\r\n  \t\t\t{\r\n  \t\t\t\t\"simpleAttribute\": \"101112\",\r\n  \t\t\t\t\"listAttribute\": [\"g\", \"h\"],\r\n  \t\t\t},  \r\n  \t\t\t{\r\n  \t\t\t\t\"simpleAttribute\": \"131515\",\r\n  \t\t\t\t\"listAttribute\": [\"i\", \"j\"],\r\n  \t\t\t}  \r\n  \t\t],\r\n  \t\t\"forcedArrayAttribute\": [\"x\"],\r\n  \t\t\"checkboxField\": [\"Value 1\"],\r\n  \t\t\"radioField\": \"Value 1\",\r\n        \"selectField\": \"C\",\r\n        \"multipleSelectField\": [ \"A\" ]   \t\t\r\n  \t}\r\n  \r\n#####POST JSON to action url:\r\n   \r\n   \t$('#aform').postJson();\r\n   \r\n#####PUT JSON to action url:\r\n    \r\n   \t$('#aform').putJson();\r\n\r\n### How to build latest stable version from source:\r\n\r\nLastest production release is allways on master branch.\r\n\r\nYou will need git, node.js and grunt to build it from the source:\r\n\r\n\t$ git clone https://github.com/alexandrefvb/jquery-json-form-functions.git\r\n\t$ cd jquery-json-form-functions\r\n\t$ npm install\r\n\t$ grunt\r\n\r\nAfter doing this a minified version of script is generated on: \r\n\r\n**jquery-json-form-functions/dist/[version]/jquery-json-form-functions-[version].min.js**\r\n\r\nAn example html using the functions is generated on:\r\n\r\n**jquery-json-form-functions/dist/[version]/example.html**\r\n\r\n\r\n----\r\n######Version history\r\n**0.1.1** - 29 Sep 2014 \r\n\r\n- Improved usage documentation.\r\n- Added build information to project documentation.\r\n- Added dependencies information to project documentation.\r\n \r\n**0.1.0** - 29 Sep 2014 \r\n\r\n- Initial release with fully tested code (using jasmine). \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}